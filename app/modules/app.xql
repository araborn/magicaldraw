xquery version "3.0";

module namespace app="http://localhost:8080/apps/magicaldraw/modules/app";

import module namespace templates="http://exist-db.org/xquery/templates" ;
import module namespace config="http://localhost/apps/magicaldraw/config" at "config.xqm";
import module namespace collector="http://localhost:8080/exist/apps/magicaldraw/collector" at "collector.xqm";

(:~
 : This is a sample templating function. It will be called by the templating module if
 : it encounters an HTML element with an attribute data-template="app:test" 
 : or class="app:test" (deprecated). The function has to take at least 2 default
 : parameters. Additional parameters will be mapped to matching request or session parameters.
 : 
 : @param $node the HTML node with the attribute which triggered this call
 : @param $model a map containing arbitrary data - used to pass information between template calls
 :)
declare function app:test($node as node(), $model as map(*)) {
    <p>Dummy template output generated by function app:test at {current-dateTime()}. The templating
        function was triggered by the class attribute <code>class="app:test"</code>.</p>
};
(:
declare function app:magicaldraw($node as node(), $model as map(*)) {
    let $data-path := "/db/apps/pessoa/data"
    let $db := "doc"
    let $name := "genre"
    let $term :=( "lista_editorial", "nota_editorial","plano_editorial" )    
    let $discriptions := ("Lista Editorial", "Nota Editorial", "Plano Editorial")
    return collector:printResults($data-path,$db,$name,$term,$discriptions)
};
:)


(:~
: Initialisierende Funktion, sammelt die Daten und gibt sie an collector:collectData weiter
:)
declare function app:moreMagic($node as node(), $model as map(*)) {
    collector:collectData("/db/apps/pessoa/magic/requests.xml"), 
    collector:collectData("/db/apps/papyri-data/magic/papyri.xml") 
};